{"version":3,"file":null,"sources":["../src/main.js"],"sourcesContent":["'use strict'\n\n/* global chrome */\n\nvar panelInstance = null\n\n// Check to see if AngularBatscanner has loaded once per second in case React is added\n// after page load\nvar loadCheckInterval = setInterval(function () {\n  createPanelIfAngularBatscannerLoaded()\n}, 1000)\n\ncreatePanelIfAngularBatscannerLoaded()\n\n//\n\nchrome.devtools.network.onNavigated.addListener(function () {\n  console.log('devtools detected reload !')\n  loadCheckInterval = setInterval(function () {\n    connectToExistingPanelIfAngularBatscannerLoaded()\n  }, 1000)\n})\n\n//\n\nfunction connectToExistingPanelIfAngularBatscannerLoaded () {\n  if (!panelInstance) {\n    return\n  }\n\n  asyncIsBatscannerLoaded(function (pageHasNgBatScan, err) {\n    if (!pageHasNgBatScan || !panelInstance) {\n      return\n    }\n\n    connectToExistingPanel(panelInstance)\n    clearInterval(loadCheckInterval)\n  })\n}\n\nfunction createPanelIfAngularBatscannerLoaded () {\n  if (panelInstance) {\n    return\n  }\n\n  asyncIsBatscannerLoaded(function (pageHasNgBatScan, err) {\n    if (!pageHasNgBatScan || panelInstance) {\n      return\n    }\n\n    createPanel()\n    clearInterval(loadCheckInterval)\n  })\n}\n\n//\n\nfunction connectToExistingPanel (panel) {\n  if (!panel) {\n    console.error('No panel :(')\n    return\n  }\n\n  panel.connectToTab()\n}\n\nfunction createPanel () {\n  chrome.devtools.panels.create('Angular BatScanner', '', 'build/panel.html', function (panel) {\n    panel.onShown.addListener(function (window) {\n      panelInstance = window.angularBatscannerChrome\n    })\n  })\n}\n\nfunction asyncIsBatscannerLoaded (callback) {\n  return chrome.devtools.inspectedWindow.eval('!!(\\n    window.__ANGULAR_BATSCANNER__\\n  )', callback)\n}\n"],"names":["panelInstance","loadCheckInterval","setInterval","createPanelIfAngularBatscannerLoaded","chrome","devtools","network","onNavigated","addListener","log","connectToExistingPanelIfAngularBatscannerLoaded","pageHasNgBatScan","err","connectToExistingPanel","panel","error","connectToTab","createPanel","panels","create","onShown","window","angularBatscannerChrome","asyncIsBatscannerLoaded","callback","inspectedWindow","eval"],"mappings":";;;;;;AAEA;;AAEA,IAAIA,gBAAgB,IAApB;;;;AAIA,IAAIC,oBAAoBC,YAAY,YAAY;;CAAxB,EAErB,IAFqB,CAAxB;;AAIAC;;;;AAIAC,OAAOC,QAAP,CAAgBC,OAAhB,CAAwBC,WAAxB,CAAoCC,WAApC,CAAgD,YAAY;UAClDC,GAAR,CAAY,4BAAZ;sBACoBP,YAAY,YAAY;;GAAxB,EAEjB,IAFiB,CAApB;CAFF;;;;AASA,SAASQ,+CAAT,GAA4D;MACtD,CAACV,aAAL,EAAoB;;;;0BAII,UAAUW,gBAAV,EAA4BC,GAA5B,EAAiC;QACnD,CAACD,gBAAD,IAAqB,CAACX,aAA1B,EAAyC;;;;2BAIlBA,aAAvB;kBACcC,iBAAd;GANF;;;AAUF,SAASE,oCAAT,GAAiD;MAC3CH,aAAJ,EAAmB;;;;0BAIK,UAAUW,gBAAV,EAA4BC,GAA5B,EAAiC;QACnD,CAACD,gBAAD,IAAqBX,aAAzB,EAAwC;;;;;kBAK1BC,iBAAd;GANF;;;;;AAYF,SAASY,sBAAT,CAAiCC,KAAjC,EAAwC;MAClC,CAACA,KAAL,EAAY;YACFC,KAAR,CAAc,aAAd;;;;QAIIC,YAAN;;;AAGF,SAASC,WAAT,GAAwB;SACfZ,QAAP,CAAgBa,MAAhB,CAAuBC,MAAvB,CAA8B,oBAA9B,EAAoD,EAApD,EAAwD,kBAAxD,EAA4E,UAAUL,KAAV,EAAiB;UACrFM,OAAN,CAAcZ,WAAd,CAA0B,UAAUa,MAAV,EAAkB;sBAC1BA,OAAOC,uBAAvB;KADF;GADF;;;AAOF,SAASC,uBAAT,CAAkCC,QAAlC,EAA4C;SACnCpB,OAAOC,QAAP,CAAgBoB,eAAhB,CAAgCC,IAAhC,CAAqC,6CAArC,EAAoFF,QAApF,CAAP;;;"}